{
	"swagger": "2.0",
	"info": {
		"description": "Construction App",
		"version": "2.0",
		"title": "Construction",
		"termsOfService": "https://autoparts.com/terms/",
		"contact": {
			"email": "team@autoparts.com"
		},
		"license": {
			"name": "Apache 2.0",
			"url": "http://www.apache.org/licenses/LICENSE-2.0.html"
		}
	},
	"tags": [
		{
			"name": "Authentication",
			"description": "Auth Module"
		}
	],
	"paths": {
		"/auth/login": {
			"post": {
				"summary": "Login Route",
				"tags": [
					"Authentication"
				],
				"description": "Login route and generate Access Token",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "loginObject",
						"schema": {
							"$ref": "#/definitions/loginObject"
						},
						"description": "Login Object"
					}
				],
				"responses": {
					"200": {
						"description": "Successfull Login return User Object & Token"
					},
					"401": {
						"description": "Password Mismatch"
					},
					"404": {
						"description": "User Not Found"
					}
				}
			}
		},
		"/users/create": {
			"post": {
				"tags": [
					"Authentication"
				],
				"summary": "register Route",
				"description": "Login route and generate Access Token",
				"consumes": [
					"application/json",
					"multipart/form-data"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "userObject",
						"description": "User Object",
						"schema": {
							"$ref": "#/definitions/userObject"
						}
					}
				],
				"responses": {
					"201": {
						"description": "item created , return token"
					},
					"422": {
						"description": "invalid input"
					}
				}
			}
		},
		"/auth/update": {
			"put": {
				"security": [
					{
						"ApiKeyAuth": []
					}
				],
				"tags": [
					"Authentication"
				],
				"summary": "Update User ( Requires Authentication ) Bearer Token",
				"description": "Update User Data , Billing Address , Shipping Address",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "userUpdateObject",
						"description": "User Object",
						"schema": {
							"$ref": "#/definitions/userUpdateObject"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Updated"
					},
					"401": {
						"description": "Unauthorised"
					}
				}
			}
		},
		"/auth/user": {
			"get": {
				"security": [
					{
						"ApiKeyAuth": []
					}
				],
				"tags": [
					"Authentication"
				],
				"parameters": [
					{
						"in": "header",
						"type": "string",
						"name": "Authorization",
						"description": "Authorization Bearer Token ( Bearer $token )"
					}
				],
				"summary": "Get User Data ( Requires Authentication ) Bearer Token",
				"description": "get current logged in user data",
				"responses": {
					"200": {
						"description": "User Object"
					},
					"401": {
						"description": "Unauthorised"
					}
				}
			}
		},
		"/auth/changePassword": {
			"post": {
				"security": [
					{
						"ApiKeyAuth": []
					}
				],
				"tags": [
					"Authentication"
				],
				"responses": {
					"200": {
						"description": "Successfull change"
					},
					"401": {
						"description": "Unauthorised"
					},
					"422": {
						"description": "missing parameters"
					}
				},
				"parameters": [
					{
						"in": "header",
						"type": "string",
						"name": "Authorization",
						"description": "Authorization Bearer Token ( Bearer $token )"
					},
					{
						"in": "body",
						"name": "Request Password reset Object",
						"description": "Request Password Reset Object",
						"schema": {
							"required": [
								"password",
								"new_password",
								"new_password_confirmation"
							],
							"properties": {
								"password": {
									"type": "string"
								},
								"new_password": {
									"type": "string"
								},
								"new_password_confirmation": {
									"type": "string"
								}
							}
						}
					}
				]
			}
		},
		"/auth/uploadImage": {
			"post": {
				"security": [
					{
						"ApiKeyAuth": []
					}
				],
				"tags": [
					"Authentication"
				],
				"summary": "Uploads an avatar.",
				"consumes": [
					"multipart/form-data"
				],
				"parameters": [
					{
						"in": "formData",
						"name": "avatar",
						"type": "file",
						"description": "The file to upload"
					}
				],
				"description": "Upload Avatar For current user",
				"responses": {
					"200": {
						"description": "User Object"
					},
					"401": {
						"description": "Unauthorised"
					}
				}
			}
		},
		"/auth/logout": {
			"get": {
				"security": [
					{
						"ApiKeyAuth": []
					}
				],
				"tags": [
					"Authentication"
				],
				"summary": "Logout ( Requires Authentication ) Bearer Token",
				"description": "Revoke Access Token",
				"parameters": [
					{
						"in": "header",
						"type": "string",
						"name": "Authorization",
						"description": "Authorization Bearer Token ( Bearer $token )"
					}
				],
				"responses": {
					"200": {
						"description": "Succsessful Log Out"
					},
					"401": {
						"description": "Unauthorised"
					}
				}
			}
		},
		"/auth/forgot": {
			"post": {
				"tags": [
					"Authentication"
				],
				"summary": "Request For Reset Password Email",
				"parameters": [
					{
						"in": "body",
						"name": "Request Password reset Object",
						"description": "Request Password Reset Object",
						"schema": {
							"required": [
								"email"
							],
							"properties": {
								"email": {
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Email has been sent"
					},
					"404": {
						"description": "No account found with this email"
					}
				}
			}
		},
		"/auth/reset": {
			"post": {
				"tags": [
					"Authentication"
				],
				"summary": "Reset Password",
				"parameters": [
					{
						"in": "body",
						"name": "passResetObject",
						"description": "Password Reset Object",
						"schema": {
							"required": [
								"email",
								"password",
								"password_confirmation",
								"token"
							],
							"properties": {
								"email": {
									"type": "string"
								},
								"password": {
									"type": "string"
								},
								"password_confirmation": {
									"type": "string"
								},
								"token": {
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "User Object"
					},
					"404": {
						"description": "Invalid token || wrong email"
					}
				}
			}
		}
	},
	"definitions": {
		"loginObject": {
			"type": "object",
			"required": [
				"email",
				"password"
			],
			"properties": {
				"email": {
					"type": "string"
				},
				"password": {
					"type": "string"
				}
			}
		},
		"userObject": {
			"type": "object",
			"required": [
				"userName",
				"password",
				"email",
				"displayName"
			],
			"properties": {
				"firstName": {
					"type": "string",
					"example": "Name"
				},
				"lastName": {
					"type": "string",
					"example": "Name"
				},
				"userName": {
					"type": "string",
					"example": "Name"
				},
				"displayName": {
					"type": "string",
					"example": "Name"
				},
				"email": {
					"type": "string",
					"example": "mail@example.com"
				},
				"password": {
					"type": "string",
					"example": "password",
					"description": "plain text password"
				}
			}
		}
	},
	"securityDefinitions": {
		"ApiKeyAuth": {
			"type": "apiKey",
			"in": "header",
			"name": "Authorization"
		},
		"Localization": {
			"type": "apiKey",
			"in": "header",
			"name": "X-localization",
			"description": "All requests must include the `X-localization` header containing your language ( en, ar )."
		}
	},
	"host": "localhost:3000",
	"basePath": "/",
	"schemes": [
		"http",
		"https"
	]
}
